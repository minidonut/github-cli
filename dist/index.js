#!/usr/bin/env node
!function(e){var o={};function t(n){if(o[n])return o[n].exports;var i=o[n]={i:n,l:!1,exports:{}};return e[n].call(i.exports,i,i.exports,t),i.l=!0,i.exports}t.m=e,t.c=o,t.d=function(e,o,n){t.o(e,o)||Object.defineProperty(e,o,{enumerable:!0,get:n})},t.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},t.t=function(e,o){if(1&o&&(e=t(e)),8&o)return e;if(4&o&&"object"==typeof e&&e&&e.__esModule)return e;var n=Object.create(null);if(t.r(n),Object.defineProperty(n,"default",{enumerable:!0,value:e}),2&o&&"string"!=typeof e)for(var i in e)t.d(n,i,function(o){return e[o]}.bind(null,i));return n},t.n=function(e){var o=e&&e.__esModule?function(){return e.default}:function(){return e};return t.d(o,"a",o),o},t.o=function(e,o){return Object.prototype.hasOwnProperty.call(e,o)},t.p="",t(t.s=0)}([function(e,o,t){"use strict";var n=this&&this.__awaiter||function(e,o,t,n){return new(t||(t=Promise))((function(i,r){function s(e){try{l(n.next(e))}catch(e){r(e)}}function c(e){try{l(n.throw(e))}catch(e){r(e)}}function l(e){var o;e.done?i(e.value):(o=e.value,o instanceof t?o:new t((function(e){e(o)}))).then(s,c)}l((n=n.apply(e,o||[])).next())}))},i=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(o,"__esModule",{value:!0});const r=i(t(1)),s=i(t(2)),c=i(t(3)),l=t(4),d=i(t(5)),u=t(6),a=t(7)(),f=t(8).version,p={origin:"",upstream:"",name:""};const m=()=>n(void 0,void 0,void 0,(function*(){return new Promise(e=>{if(p.name)e(p);else{const o=/^git@github.com:(.*)\/(.*).git$/;a.getRemotes(!0,(t,n)=>{var i,r;t&&process.exit(5);const s=o.exec(null===(i=n.find(e=>"origin"===e.name))||void 0===i?void 0:i.refs.push);s||(console.log("Origin is not set"),process.exit(1)),p.origin=s[1],p.name=s[2];const c=o.exec(null===(r=n.find(e=>"upstream"===e.name))||void 0===r?void 0:r.refs.push);c||(console.log("Upstream is not set"),process.exit(1)),p.upstream=c[1],e(p)})}})})),v=({to:e,from:o,remote:t})=>new Promise((i,s)=>{a.checkout(e,c=>{c&&s(`Cannot checkout to branch ${e}`),a.pull(t,e,c=>n(void 0,void 0,void 0,(function*(){c&&s(`Cannot pull from ${t}/${e}`);const n=yield r.default("git",["branch","-D",o]);n.failed||0!==n.exitCode?(console.log("Cannot delete branch",u.yellow(o)),process.exit(3)):(console.log(`Branch ${o} is deleted`),i(!0))})))})}),g=()=>{return new d.default({auth:process.env.GITHUB_ACCESS_TOKEN,userAgent:`github-cli v${f}`,previews:["jean-grey","symmetra"],timeZone:"Asia/Seoul",baseUrl:"https://api.github.com",log:{debug:()=>{},info:()=>{},warn:console.warn,error:console.error}})},y=()=>n(void 0,void 0,void 0,(function*(){const e=c.default("get current branch name...").start();return new Promise(o=>{a.branch([],(t,n)=>{t?(e.fail(),process.exit(1)):(e.text="get current branch name... "+u.yellow(n.current),e.succeed(),o(n.current))})})})),h=(e,o,t)=>n(void 0,void 0,void 0,(function*(){return new Promise(i=>{const r=setInterval(()=>n(void 0,void 0,void 0,(function*(){const s=yield((e,o,t)=>n(void 0,void 0,void 0,(function*(){return(yield e.pulls.get({owner:o.upstream,repo:o.name,pull_number:t})).data})))(e,o,t);console.log("- get mergeable status:",s.mergeable),null!==s.mergeable&&(!1===s.mergeable?(console.error("Cannot be merged. check\n",s.html_url),process.exit(1)):(clearInterval(r),i(!0)))})),3e3)})})),x=(e,o,t,i)=>n(void 0,void 0,void 0,(function*(){return new Promise(r=>{const s=c.default("[CircleCI]").start(),l=setInterval(()=>n(void 0,void 0,void 0,(function*(){const c=yield((e,o,t)=>n(void 0,void 0,void 0,(function*(){return(yield e.repos.getCombinedStatusForRef({owner:o.upstream,repo:o.name,ref:t})).data})))(e,o,t),d=c.state;s.text="[CircleCI] "+(e=>e.map(({context:e,state:o})=>u["pending"===o?"yellow":"success"===o?"green":"red"](e.replace(/ci\/circleci./,"").trim())).join(" "))(c.statuses),"pending"!==d&&("failure"===d?(s.fail(),console.error("CirclCI failed. check\n",i),process.exit(1)):(clearInterval(l),s.succeed(),r(!0)))})),3e3)})})),b=()=>n(void 0,void 0,void 0,(function*(){const e=yield y(),o=yield m(),t=yield(e=>n(void 0,void 0,void 0,(function*(){const o=c.default("get jira issue of id "+u.yellow(e)).start(),t=yield r.default("jira",["show","-s",e]);if(!t.failed&&0===t.exitCode)return o.succeed(),console.log("└─",t.stdout),t.stdout;o.fail(),console.log("Cannot find jira issue of id:",u.yellow(e)),process.exit(3)})))(e),i=g();yield(e=>n(void 0,void 0,void 0,(function*(){const o=c.default("git push origin "+u.yellow(e)).start();return new Promise(t=>{a.push(["origin",e],(e,n)=>{e?(o.fail(),process.exit(2)):(o.succeed(),t(n))})})})))(e);const s=yield((e,o,t,i,r="dev")=>n(void 0,void 0,void 0,(function*(){const n=c.default(`Generate pull request of [${u.yellow(o.name)}] ${o.origin}/${t} -> ${o.upstream}/${r}`).start();try{const s=yield e.pulls.create({owner:o.upstream,repo:o.name,title:`[${t}] ${i}`,head:`${o.origin}:${t}`,base:r});return n.succeed(),s.data}catch(e){console.log("Cannot make pull request",e),n.fail(),process.exit(1)}})))(i,o,e,t);return console.log(s.html_url),console.log(s.url),l.notify({title:"Yo, PullRequest created",message:`[${e}] ${t}`,sound:!0,wait:!0,timeout:10}),e})),w=e=>n(void 0,void 0,void 0,(function*(){const o="string"==typeof e?e:yield y(),t=yield m(),i=g(),r=yield((e,o,t)=>n(void 0,void 0,void 0,(function*(){const n=(yield e.pulls.list({owner:t.upstream,repo:t.name})).data.find(e=>e.head.ref===o);if(n)return n;console.error(`Cannot find any pull request of [${t.name}] ${t.origin}/${o} -> ${t.upstream}/...`),process.exit(1)})))(i,o,t);yield h(i,t,r.number),yield x(i,t,r.head.sha,r.html_url),l.notify({title:"Ho! All check is passed. you can merge now",message:`[${o}] ${r.title}`,sound:!0,wait:!0,timeout:10})})),$=e=>n(void 0,void 0,void 0,(function*(){const e=yield y();yield m();v({to:"dev",from:e,remote:"upstream"})}));s.default.version(f,"-v, --version").command("yo").description("Yo!, create pull request").action(b),s.default.command("ho").description("Ho!, wait pull request mergeable").action(w),s.default.command("hou").description("Hou!, merge!").action($),s.default.command("yohohou").description("Yo, Ho! Hou!!, create, merge, delete").action(()=>n(void 0,void 0,void 0,(function*(){const e=yield b();yield w(e),yield $()}))),s.default.on("--help",(function(){console.log("Examples:")})),s.default.parse(process.argv)},function(e,o){e.exports=require("execa")},function(e,o){e.exports=require("commander")},function(e,o){e.exports=require("ora")},function(e,o){e.exports=require("node-notifier")},function(e,o){e.exports=require("@octokit/rest")},function(e,o){e.exports=require("chalk")},function(e,o){e.exports=require("simple-git")},function(e){e.exports=JSON.parse('{"name":"@minidonut/github-cli","version":"1.0.0","main":"dist/index.js","license":"MIT","scripts":{"dev":"nodemon --watch \'src/**/*\' -e ts,tsx --exec \'ts-node --files\' src/index.ts","start":"ts-node --files src/index.ts","build":"NODE_ENV=production webpack","clean":"rm -rf dist"},"devDependencies":{"@types/inquirer":"^6.0.3","@types/node":"^12.0.10","@types/node-notifier":"^5.4.0","@types/ramda":"^0.26.9","nodemon":"^1.19.1","ts-loader":"^6.0.4","tslint":"^5.18.0","typescript":"^3.7.2","webpack":"^4.35.0","webpack-cli":"^3.3.4","webpack-node-externals":"^1.7.2"},"dependencies":{"@octokit/rest":"^16.34.1","@types/node-fetch":"^2.5.3","axios":"^0.19.0","chalk":"^2.4.2","cli-spinners":"^2.2.0","commander":"^2.20.0","date-fns":"^1.30.1","execa":"^3.2.0","inquirer":"^6.4.1","node-fetch":"^2.6.0","node-notifier":"^6.0.0","ora":"^4.0.2","ramda":"^0.26.1","simple-git":"^1.126.0","ts-node":"^8.4.1"},"bin":{"github":"dist/index.js"},"files":["dist"]}')}]);